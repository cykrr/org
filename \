import {Scene, WebGLRenderer, Color} from 'three'
import {OrthographicCamera} from 'three'
import {Clock} from 'three'
//import {BoxGeometry} from 'three'

import {CircleGeometry, Mesh, MeshBasicMaterial, MeshBasicMaterialParameters} from 'three'

import {Vector3} from 'three'
import {DoubleSide, FrontSide, BackSide} from 'three'
//
import {CSS2DObject, CSS2DRenderer} from './three-css2drenderer-ts'



// import  {AnimeInstance} from 'animejs'
// import  anime from 'animejs'

let scene = new Scene();
let cam = new OrthographicCamera(0, window.innerWidth, 0, window.innerHeight, -1, 1);
let renderer = new WebGLRenderer();


const div = document.createElement('div');

div.className = 'label';
div.textContent = "a"
div.style.marginTop = '-1em';
div.style.color = "white";


const label = new CSS2DObject(div);
label.position.set(100, 100, 0)

let labelRenderer = new CSS2DRenderer();

let grey = "#202020"

renderer.setClearColor(Number(grey) , 1);
scene.background = new Color(grey); 

document.body.style.backgroundColor = grey;

/* Create a circle */
var radius = 100;
var circle = new CircleGeometry(radius, 36);

var mesh = new Mesh(circle, new MeshBasicMaterial(<MeshBasicMaterialParameters>{color: 0xff0000, side: DoubleSide}));

mesh.position.x = window.innerWidth / 2;   
mesh.position.y = window.innerHeight / 2;   


mesh.add(label);
scene.add(mesh)

/* Set Viewport Size */
renderer.setSize(window.innerWidth, window.innerHeight);

labelRenderer.setSize(window.innerWidth, window.innerHeight);
labelRenderer.domElement.style.position = 'absolute';
labelRenderer.domElement.style.top = "0px";
labelRenderer.domElement.style.color = "white";




/* Get Canvas element */
const canvas: HTMLElement = document.querySelector('#gameCanvas')

//canvas.appendChild(renderer.domElement);
document.body.appendChild(labelRenderer.domElement);






/* Render Loop */
function animate(){
    requestAnimationFrame(animate);

    renderer.clear(true, true, true)
    //renderer.render(scene, cam);
    labelRenderer.render(scene,cam);
}
animate();
